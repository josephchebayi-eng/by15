import { NextResponse } from "next/server"
import OpenAI from "openai"
import { getOpenAIKey } from "@/lib/ai-providers" // Adjust if path differs

export async function POST(req: Request) {
  try {
    const { prompt, style, colors, industry } = await req.json()

    if (!prompt || !prompt.trim()) {
      return NextResponse.json({ success: false, error: "Prompt is required" }, { status: 400 })
    }

    // Load OpenAI key (from Supabase, env, etc.)
    const apiKey = await getOpenAIKey()
    if (!apiKey) {
      return NextResponse.json(
        {
          success: false,
          error: "OpenAI API key is not configured.",
          needsConfiguration: true,
        },
        { status: 503 }
      )
    }

    const openai = new OpenAI({ apiKey })

    const fullPrompt = `
Design a modern, vibrant, colorful logo for a business in the ${industry || "creative"} industry.
Style: ${style || "artistic, bold"}
Colors: ${colors || "vivid and eye-catching"}
Business description: ${prompt}
The logo should be professional, scalable, and look great on websites, merchandise, and social media.
`

    const response = await openai.images.generate({
      model: "dall-e-3",
      prompt: fullPrompt,
      n: 1,
      size: "1024x1024",
      response_format: "url",
    })

    const imageUrl = response.data?.[0]?.url

    if (!imageUrl) {
      return NextResponse.json(
        { success: false, error: "No image was generated by OpenAI." },
        { status: 502 }
      )
    }

    return NextResponse.json({
      success: true,
      imageUrl,
      prompt: fullPrompt,
      provider: "openai",
      model: "dall-e-3",
      message: "Logo image generated using DALL·E 3",
    })
  } catch (error: any) {
    console.error("❌ Logo generation error:", error)
    return NextResponse.json(
      {
        success: false,
        error: error?.message || "Image generation failed.",
      },
      { status: 500 }
    )
  }
}

